{"ast":null,"code":"exports.create = function (user) {\n  return fetch('/api/users/', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nexports.list = function () {\n  return fetch('/api/users/', {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nexports.read = function (params, credentials) {\n  return fetch('/api/users/' + params.userId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nexports.update = function (params, credentials, user) {\n  return fetch('/api/users/' + params.userId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nexports.remove = function (params, credentials) {\n  return fetch('/api/users/' + params.userId, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:\\Users\\nbcal\\Documents\\SMU\\Homework\\CyberMart\\client\\src\\users\\apiUser.js"],"names":["exports","create","user","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","console","log","list","read","params","credentials","userId","t","update","remove"],"mappings":"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","sourcesContent":["exports.create = (user) => {\n  return fetch('/api/users/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    })\n    .then((response) => {\n      return response.json()\n    }).catch((err) => console.log(err))\n}\n\nexports.list = () => {\n  return fetch('/api/users/', {\n    method: 'GET',\n  }).then(response => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nexports.read = (params, credentials) => {\n  return fetch('/api/users/' + params.userId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nexports.update = (params, credentials, user) => {\n  return fetch('/api/users/' + params.userId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(user)\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nexports.remove = (params, credentials) => {\n  return fetch('/api/users/' + params.userId, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n"]},"metadata":{},"sourceType":"module"}